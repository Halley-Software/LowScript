#include "token.h"

const std::map<std::string, enum Keywords> KW = {
  {"fn",           Keywords::FN},
  {"var",          Keywords::VAR},
  {"const",        Keywords::CONST},
  {"return",       Keywords::RETURN},
  {"import",       Keywords::IMPORT},
  {"from",         Keywords::FROM},
  {"export",       Keywords::EXPORT},
  {"class",        Keywords::CLASS},
  {"this",         Keywords::THIS},
  {"super",        Keywords::SUPER},
  {"type",        Keywords::TYPE},
  {"interface",   Keywords::INTERFACE},
  {"enum",        Keywords::ENUM},
  {"extends",     Keywords::EXTENDS},
  {"implements",  Keywords::IMPLEMENTS},
  {"module",      Keywords::MODULE},
  {"for",         Keywords::FOR},
  {"while",       Keywords::WHILE},
  {"do",          Keywords::DO},
  {"break",       Keywords::BREAK},
  {"skip",        Keywords::SKIP},
  {"if",          Keywords::IF},
  {"else",        Keywords::ELSE},
  {"elif",        Keywords::ELIF},
  {"match",       Keywords::MATCH},
  {"switch",      Keywords::SWITCH},
  {"case",        Keywords::CASE},
  {"default",     Keywords::DEFAULT},
  {"in",          Keywords::IN},
  {"of",          Keywords::OF},
  {"and",         Keywords::AND},
  {"or",          Keywords::OR},
  {"not",         Keywords::NOT},
  {"try",         Keywords::TRY},
  {"catch",       Keywords::CATCH},
  {"as",          Keywords::AS},
  {"constructor", Keywords::CONSTRUCTOR},
  {"destructor",  Keywords::DESTRUCTOR},
  {"new",         Keywords::NEW},
  {"drop",        Keywords::DROP},
  {"public",      Keywords::PUBLIC},
  {"private",     Keywords::PRIVATE},
  {"protected",   Keywords::PROTECTED},
  {"static",      Keywords::STATIC},
  {"override",    Keywords::OVERRIDE},
  {"setter",      Keywords::SETTER},
  {"getter",      Keywords::GETTER},
  {"async",       Keywords::ASYNC},
  {"await",       Keywords::AWAIT}
};